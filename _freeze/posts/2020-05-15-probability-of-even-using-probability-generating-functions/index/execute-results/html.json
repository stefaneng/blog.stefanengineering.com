{
  "hash": "822ac42ac4831b59816174c0035295fd",
  "result": {
    "markdown": "---\ntitle: Probability of even/odd using probability generating functions\nauthor: Stefan Eng\ndate: '2020-05-15'\nslug: probability-of-even-generating-functions\ncategories:\n  - math\ntags:\n  - exercise\n  - probability\noutput:\n  blogdown::html_page:\n    toc: no\n    fig_width: 5\n    fig_height: 5\ncsl: ../../static/bibtex/acm-sig-proceedings.csl\n---\n\n\n\n\n## Probability Generating Functions\n\nA probability generating function for a discrete random variable $X$ taking values $\\{0,1,\\ldots\\}$ is defined as\n$$\nG(z) = E[z^X] = \\sum_{j = 0}^\\infty z^j P(X = j)\n$$\n\nWhich is defined for all complex $z$ in which the sum converges.\nIt always converges for $|z| < 1$ but the radius might be larger depending on our distribution.\nClearly we have that $G(0) = 0$.\nAlso we can see that\n$$\nG(1) = \\sum_{j = 0}^\\infty P(X = j) = 1\n$$\nsince we are summing over the entire sample space.\n\n### Probability of Even/Odd\n\nThis is problem 1.11 in Ross's Stochastic Processes Second Edition.\n\nWe have that\n$$\n\\begin{aligned}\nG(-1) &= \\sum_{j = 0}^\\infty (-1)^j P(X = j)\\\\\n  &= P(X = 0) - P(X = 1) + P(X = 2) - \\cdots\\\\\nG(1) &= P(X = 0) + P(X = 1) + P(X = 2) + \\cdots\\\\\nG(-1) + G(1) &= 2P(X = 0) + 2P(X = 2) + 2 P(X = 4) + \\cdots\n\\end{aligned}\n$$\n\nAssuming that 0 is considered even it follows that\n$$\n\\begin{aligned}\nP(X \\text{ is even}) = \\frac{G(1) + G(-1)}{2} = \\frac{1 + G(-1)}{2}\n\\end{aligned}\n$$\nWe also have that\n$$\nP(X \\text{ is odd}) = 1 - \\frac{1 + G(-1)}{2} = \\frac{1 - G(-1)}{2}\n$$\n\n#### Binomial \nAssume that $X$ is a binomial with parameters $n$ and $p$\n$$\nP(X = x) = {n \\choose x} p^x (1 - p)^{n - x}\n$$\nThen we can compute the probability generating function\n\n$$\n\\begin{aligned}\nG(z) = E[z^X] &= \\sum_{j = 0}^\\infty z^j P(X = j)\\\\\n  &= \\sum_{j = 0}^\\infty z^j {n \\choose j} p^j (1 - p)^{n - j}\\\\\n  &= \\sum_{j = 0}^n {n \\choose j} (zp)^j (1 - p)^{n - j}\\\\\n  &= (zp + 1 - p)^n && \\text{Binomial theorem}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\npgf_binom <- function(z, n, p) {\n  (z * p + 1 - p)^n\n}\n\nz <- seq(0, 1, length.out = 1000)\nn <- 10\np <- 1/3\nplot(z, pgf_binom(z, n, 3/4), type = \"l\")\n```\n:::\n\n\nNote that the sum converges for all real $z$.\nThis is a good point to check that our result matches that $G(1) = 1$.\nSo $G(-1) = (1 - 2p)^n$.\nThus,\n$$\nP(X \\text{ is even}) = \\frac{1 + (1 - 2p)^n}{2}\n$$\n\n#### Poisson\nLet $X$ be a Poisson random variable with mean $\\lambda$\n$$\nP(X = k) = e^{-\\lambda} \\frac{\\lambda^k}{k!}\n$$\n\nThen\n$$\n\\begin{aligned}\nG(z) = E[z^X] &= \\sum_{j = 0}^\\infty z^j e^{-\\lambda} \\frac{\\lambda^j}{j!}\\\\\n  &= e^{-\\lambda} \\sum_{j = 0}^\\infty  \\frac{(\\lambda z)^j}{j!}\\\\\n  &= e^{-\\lambda} e^{\\lambda z}\\\\\n  &= e^{-\\lambda + \\lambda z}\n\\end{aligned}\n$$\nNote that the sum converges for all real $z$.\nAgain as an exercise check that $G(1) = 1$.\nIt follows that\n$$\nG(-1) = e^{-2\\lambda}\n$$\nSo the probability of a Poisson random variable being even is\n$$\nP(X \\text{ is even}) = \\frac{1 + e^{-2\\lambda}}{2}\n$$\n\n#### Geometric\nAssume now that $X$ is geometric with parameter $p$ with $X \\in \\{1,2,\\ldots\\}$.\n$$\nP(X = k) = p (1 - p)^{k - 1}\n$$\nThen the probability generating function for $X$ is\n\n$$\n\\begin{aligned}\nG(z) = E[z^X] &= \\sum_{j = 1}^\\infty z^j P(X = j)\\\\\n  &= \\sum_{j = 1}^\\infty z^j p (1 - p)^{j - 1}\\\\\n  &= pz \\sum_{j = 1}^\\infty (z(1 - p))^{j - 1}\\\\\n  &= pz \\sum_{j = 0}^\\infty (z(1 - p))^{j}\\\\\n  &= \\frac{pz}{1 - z(1 - p)} && \\text{ for } |z| < \\frac{1}{1 - p}\n\\end{aligned}\n$$\nSince $1 - p < 1$, then the sum converges for $z = -1$. It follows that\n$$\nG(-1) = \\frac{- p}{2 - p}\n$$\nSo the probability that the geometric random variable $X$ is even is given by\n\n$$\n\\begin{aligned}\nP(X \\text{ is even}) &= \\frac{1 + \\frac{- p}{2 - p}}{2}\\\\\n&= \\frac{1 - p}{2 - p}\n\\end{aligned}\n$$\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}